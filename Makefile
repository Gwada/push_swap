# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: dlavaury <dlavaury@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2018/01/13 17:27:58 by dlavaury          #+#    #+#              #
#    Updated: 2018/01/27 21:15:29 by dlavaury         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

LIB				= libft
CHECKER			= checker
PUSH_SWAP		= push_swap

CC				= gcc
FLAGS			= -Wall -Wextra -Werror
HARDFLAGS		= -Weverything
HEADER			= -I includes -I $(LIB)/includes/

SOURCES			= display.c \
					init.c \
					quicksort.c \
					swap.c \
					rotate.c \
					push.c

SOURCES_C		= $(SOURCES) \
					c_main.c
SOURCES_PS		= $(SOURCES) \
					ps_main.c \
					crack_that_shit.c \
					push_swap_crack.c \
					push_swap.c \
					first_step.c \
					second_step.c \
					value_insert.c \
					easy_insert.c \
					hard_insert.c \
					nearest_dif.c \
					nearest_checker.c \
					last_step.c \
					calibrate_rot.c

OBJ_C			= $(addprefix sources/,$(SOURCES_C:.c=.o))
OBJ_PS			= $(addprefix sources/,$(SOURCES_PS:.c=.o))

#PROGRESS
#TC				= $(words $(SOURCES_C))
#TPS				= $(words $(SOURCES_P_S))
#N				= 0
#C				= $(words $N)$(eval N := x $N)
#ECHOC			= "[`expr $C '*' 100 / $(TC)`%]"
#ECHOPS			= "[`expr $C '*' 100 / $(TPS)`%]"

#Color
_GREY=\x1b[30m
_RED=\x1b[31m
_GREEN=\x1b[32m
_YELLOW=\x1b[33m
_BLUE=\x1b[34m
_PURPLE=\x1b[35m
_CYAN=\x1b[36m
_WHITE=\x1b[37m
_END=\x1b[0m

all: $(CHECKER) $(PUSH_SWAP)

$(CHECKER): lib $(OBJ_C)
	@$(CC) $(FLAGS) $(HEADER) -o $(CHECKER) $(OBJ_C) $(LIB)/$(LIB).a
	@echo "$(_CYAN)$(CHECKER)$(_END)			: $(_GREEN)compiled$(_END)"

$(PUSH_SWAP): lib $(OBJ_PS) 
	@$(CC) $(FLAGS) $(HEADER) -o $(PUSH_SWAP) $(OBJ_PS) $(LIB)/$(LIB).a
	@echo "$(_CYAN)$(PUSH_SWAP)$(_END)		: $(_GREEN)compiled$(_END)"

%.o: %.c
#	@printf "%-60b\r" "$(ECHOPS)"
	@$(CC) $(FLAGS) -c $< -o $@ $(HEADER)

clean:
	@make -C $(LIB) clean
	@make clean_C
	@make clean_PS
	@echo "$(_RED)clean $(_END)			: $(_GREEN)done$(_END)"
clean_C:
	@rm -f $(OBJ_C)
clean_PS:
	@rm -f $(OBJ_PS)

fclean: clean
	@make -C $(LIB) fclean
	@rm -f $(CHECKER) $(PUSH_SWAP)
	@echo "$(_RED)fclean$(_END)			: $(_GREEN)done$(_END)"

re: fclean
	@make all

lib:
	@make -j3 -C $(LIB)

go:
	@clear
	@make clean_C
	@make clean_PS
	@make all
	@./$(CHECKER)
	@./$(PUSH_SWAP)

NUM1 = "-cv 4 5 6 8 7 9 1 2 53 3"

NUM2 = "-cv 4 5 6 25 31 8 7 30 9 -5 -4 -3 -2 -1 0 1 2 53 3 42"

NUM3 = "-cv 585 584 587 588 231 4865 2586 4563 84651 9452 -41815 484151 -415815 0 -5 4813 187456 -89452 3241 -48541 -48552 -45125 -9745265 -932 -63658 24874 157465 3545 7825 78 9851 4561 3874 154865 15489 12584 3484 94621 487 52 15874 34 16 84 79 94 85 62 42 54"

NUM4 = "-cv 585 584 587 588 231 4865 2586 4563 84651 9452 -41815 484151 -415815 0 -5 4813 187456 -89452 3241 -48541 -48552 -45125 -9745265 -932 -63658 24874 157465 3545 7825 78 9851 4561 3874 154865 15489 12584 3484 94621 487 52 15874 34 16 84 79 94 85 62 42 54 4158415 -18485 -4851652 -98451585 145452 3854 545415 -4851515 -9451151 25454 846511 584541 185485251 25451 841515547 181512515 95215 -78415 45612546 5485415 1000021 54854 489451 7526156 9841256 845213 3215 8745165 2564856 -541526 -9841561 8485125 -84151841 -47815 8454155 1851251 4186516 584851 651 -84151 -7561651 54845 587451 -84165 -95151 -3218 -456185 -78165 -951515 -84516"

NUM5 = "-cv -2 1 3 5 6 8 35 -45 -65 +45 -5 -6 -31 45625 -561335 -5613 +1568 1565 -485415 54523 541 35156 +8513515 -485125012 185645 35123 5848561 -41561 4185645 312553 15845 -245652155 59658 653 -4852 486553 -1258453 -1520564 5124 0 -7 -8 -9 -10 -11 -12 -13 -14 32 -15 -16 -18 100 101 102 103 104 105 106 107 108 109 110 111 542 54524 543 54525 54526 54527 54528 -561336 586 48564 548965236 -2000000001 25665 21548 -1555 155 266 -185185 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 551552 64584 8489 -415 5648 1564 1584 156 157 158 15665 59656 6589 2396 325896 25486 21586 3653698 6523 25 -5896 287 96 -1248 589 145 897485 -1567 -4158 1455 5445 -48521 512 15655 4185 2156 -4151 15 15645 1515145 1000001 10001 100001 110001 10 11 156465 -485653 564455 568485 -845 -155415 5184785 151454 2655 1545 24531 215416 1512564 1555 47 584864 6947856 2548 265854 545132 12586 12587 12588 12589 12590 12591 12592 12593 12594 12595 12596 12597 12598 12599 12600 12601 12602 12603 12604 12605 12606 12607 12608 12609 12610 12611 12612 12613 12614 12615 12616 12618 12619 12620 12621 12622 12623 12624 12625 12626 12627 12628 12629 12630 -156 -566 -15145 -41856 -1565 -158648665 -15615 -154 -14521 -1452 156485 548654 28451 58486515 6546 485641 54564136 -253135 -15314341 -41512 -145 2554 58 15412 +454512 6545153 265456 -41532 -41523 +142 -45341 -1422 21568 65456 -534153 -15321 -151521 5541 5656 5465 1456 1457 5515 84865 54846 418657484 486415 -48515 415415 -145156 -1454185 -15353 -25153 5564 85453 485465 2341856 3545 -5848 8694 258748 2846 186465 -48651 -48562 -48563 -48564 -48565 -48566 -48567 -48568 -48569 -48570 35455 1458 15485 41854 3248 -41851485 154853 48566654 48545 1554665 -10564 +1561256 145865 152485 15564 21584 54854 4541265 154 5485 -485621 -15848 -41852 -1854852 -152358 -941523 -841532 -715652 -6452361 -451464163 -256323 -998452 45896 148564 125864 4186541 12856 58697 2586754 25876 21587465 -1564658 -4859645 -485136 -415152 -2586486 265897458 695894 4865 584 61256 36256 1516 26568945 5641 54855 6354854 1587 489 -94 415122 21654 154852645 64584155 26595 16 656 25646 258456 6526 -151 546541 -51 -52 2856 89465 984515 8941659 6561 5846552 565626 84562 8496526 654 85485 -54165 -4512123 -946 -974 -971 89456 -98745 -4541 -4851 6955 54656 85465 84213 854865 -841 -452 -3245 85451 -41521 484 8745 897652 -485152 -454165 -4152145 -45123 1254 1454 5689 4865236 -4851524 -485 -7852 -77485 -9744 -786 1608 7610 160850 170850 80655 080687 291090 280475 415 54 4 7 9 12 13 14 17 18 19 20 21 42 87 -125 -41 -42 854 148 4158 540 539 486 -455 -4515 -4185 485 4854 4897 423 56485 6484 4846 -4896 -48485 -4854154 -748 -48 -484 488 37 53 848 -451 41584 5455 -5555 55555 555555 5555555 -55555555 1111 11111 111111 1111111 -11111111 22 222 2222 22222 -222222 2222222 -22222222 33 333 3333 33333 -333333 3333333 -33333333 -87 -86 -85 -84 -83 -456 44444444 55 66 6666 66666 666666 -2000000000 36"

goc:
	@clear
	@make clean_C
	@make $(CHECKER)
	@./$(CHECKER)

gops1:
	@clear
	@make clean_PS
	@make $(PUSH_SWAP)
#	@time ./push_swap $(NUM3)
	./push_swap $(NUM1)

gops2:
	@clear
	@make clean_PS
	@make $(PUSH_SWAP)
#	@time ./push_swap $(NUM3)
	./push_swap $(NUM2)

gops3:
	@clear
	@make clean_PS
	@make $(PUSH_SWAP)
#	@time ./push_swap $(NUM3)
	./push_swap $(NUM3)

gops4:
	@clear
	@make clean_PS
	@make $(PUSH_SWAP)
#	@time ./push_swap $(NUM3)
	./push_swap $(NUM4)

gops5:
	@clear
	@make clean_PS
	@make $(PUSH_SWAP)
#	@time ./push_swap $(NUM3)
	./push_swap $(NUM5)

.PHONY: all re fclean clean
